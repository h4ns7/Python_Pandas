# -*- coding: utf-8 -*-
"""Análise exploratória anime.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LfBTXOh70c4mtpuc2z8w1SYlp4NJIZBZ
"""

#Importando as bibilotecas
import pandas as pd
import matplotlib.pyplot as plt
plt.style.use("seaborn")

#Upload do arquivo
from google.colab import files
arq = files.upload()

#Criando o DataFrama
df = pd.read_csv("anime.csv")

#Visualizando as 5 primeiras linhas
df.head()

#Quantidade de linhas e colunas
df.shape

#Verificando os tipos de dados
df.dtypes

#alterando os nomes das colunas para melhor entendimento
df = df.rename(columns={"anime_id":"AnimeID", "name":"Nome", "genre":"Genero", "type":"Tipo", "episodes":"Episodios", "rating":"Classificacao","members":"Membros" })

df.sample(10)

#Visualizando as colunas exixtentes e seus tipos
df.columns

df.describe()

#Formatando documentação para melhor visualização de numero quebrado(Float)
pd.options.display.float_format = '{:20,.2f}'.format

#Qual é o anime que tem a maior comunidade ?
df.groupby('Nome')['Classificacao'].mean()

#Verificando se contém números ausentes em nossa base
df.isnull().sum()

#Apagando as linhas com valores nulos com base apenas em 1 coluna
df.dropna(subset=['Genero'], inplace=True)

#Apagando as linhas com valores nulos com base apenas em 1 coluna
df.dropna(subset=['Tipo'], inplace=True)

#Qual a média de classificação de todos animes ? 
df['Classificacao'].mean()

#Apagando linhas que estejam com valores faltantes em todas as colunas
df.dropna(how='all', inplace=True)

#nlarget -- TOP 3 com maiores Classificações
df.nlargest(3,'Classificacao')

#nsamllest -- TOP  3 piores Classificações
df.nsmallest(3, 'Classificacao')

#Agrupamento por Classificação por tipo
df.groupby('Tipo')['Classificacao'].mean()

#Agrupamento por Classificação por tipo
df.groupby('Genero')['Classificacao'].mean()

#Gráfico de barras
df['Tipo'].value_counts(ascending=False).plot.bar(title='classificação por tipo');

df.groupby(df['Tipo'])['Classificacao'].mean().plot(marker ='v',title= 'Melhores animes Genero');
plt.xlabel('tipo');
plt.ylabel('Classificacao');
plt.legend();

plt.savefig("melhores_animes_tipo.png")



#Salvando em PNG

plt.savefig("grafico QTDEx MES.png")